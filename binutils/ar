#!/bin/sh
#
# Copyright 2006 by Brian Dominy <brian@oddchange.com>
#
# Changes by David Flamand <dflamand@gmail.com> (June 2016)
#  - cleanup, more robust and verbose in case of error
#
# This file is part of GCC6809.
#
# GCC6809 is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# GCC6809 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC6809; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# This script is a frontend to the aslib library manager, to make it
# look more like GNU ar.  Not all ar features are supported here.
# It basically translates ar style options into aslib format.

set -e
IFS=' '

as_prefix=@AS_PREFIX@
bindir=${as_prefix}/bin

showversion () {
cat <<END
ar (m6809) [GNU archiver frontend] 0.3 20160608
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty.
END
}

# Output a message to stderr and exit with a failure code.
error ()
{
	echo "ar (m6809): $1" >&2
	exit 1
}

libcachetool ()
{
	if [ $# = 0 ]; then
		error "no file given"
	fi
	if [ $# -gt 1 ]; then
		shift
		error "extra garbage '$*'"
	fi

	libpathname=$1
	if [ ! -f "$libpathname" ]; then
		error "no such file '$libpathname'"
	fi

	libfile=`basename "$libpathname"`
	libdir=`dirname "$libpathname"`
	lib=${libfile%.*}
	reallibfile=as-$libfile
	libcache=${lib}-cache

	if [ ! -d "$libdir" ]; then
		error "no such directory '$libdir'"
	fi
	cd "$libdir"

	if [ ! -f "$libfile" ]; then
		error "'$libfile' does not exist in '$libdir'"
	fi

	# Recreate the cache directory
	rm -rf "$libcache"
	mkdir -p "$libcache"

	# Fill the cache
	cd "$libcache"
	$bindir/aslib x ../"$libfile"
	cd ..

	# Make the index file
	find "$libcache" -name '*.o' | LC_ALL=C sort > "$reallibfile"
	exit
}

# Parse and translate command-line options.
options=${1#-}
if [ -n "$options" ]; then
	case $options in
		-version)
			showversion
			exit 0
			;;
		help|-help)
			cat $0 # TODO
			exit 0
			;;
		C|-cache)
			shift; libcachetool "$@"
			;;
		rc|cr|rcu|cru)
			shift; options="rc"
			;;
		rv|vr)
			shift; options="rv"
			;;
		x)
			shift; options="x"
			;;
		*.*)
			options="rc"
			;;
		*)
			error "invalid options '$options'"
			;;
	esac
fi
if [ -z "$options" ]; then
	error "no options given"
fi

# Invoke the real assembler with translated options.
exec $bindir/aslib $options "$@"
