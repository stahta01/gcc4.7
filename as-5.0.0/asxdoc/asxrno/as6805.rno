.appendix AS68(HC)05 Assembler


.header level 1;.6805 Directive

.break
Format:
.skip;.indent 8
_.6805
.skip
The .6805 directive selects the MC6805 specific
cycles count output when the -c command line option is specified.


.header level 1;.\h\c05 Directive

.break
Format:
.skip;.indent 8
_.hc05
.skip
The .hc05 directive selects the MC68HC05/146805 specific
cycles count output when the -c command line option is specified.


.header level 1;The .____.CPU. Variable

The value of the pre-defined symbol '.____.CPU.' corresponds
to the selected processor type.  The default value is 0
which corresponds to the default processor type.  The
following table lists the processor types and associated
values for the ASZ80 assembler:

.skip 1
.literal
	Processor Type		  .__.CPU. Value
	--------------		  --------------
	    .6805			 0
	    .hc05			 1
.end literal

.skip 1
  The variable '.____.CPU.' is by default defined as local
and will not be output to the created .rel file.  The
assembler command line options -g or -a will not cause the
local symbol to be output to the created .rel file.

  The assembler .globl directive may be used to change the
variable type to global causing its definition to be
output to the .rel file.  The inclusion of the definition
of the variable '.____.CPU.' might be a useful means of
validating that seperately assembled files have been
compiled for the same processor type.  The linker will
report an error for variables with multiple non equal
definitions.


.header level 1;6805 Register Set

.break
The following is a list of the 6805 registers used by AS6805:
.skip
.literal
	a	-	8-bit accumulator
	x	-	index register
.end literal	


.header level 1;6805 Instruction Set

The following tables list all 6805 mnemonics recognized by the
AS6805 assembler. The designation [] refers to a required addressing mode
argument. The following list specifies the format for
each addressing mode supported by AS6805:

.skip
.literal
	#data		immediate data
			byte or word data

	*dir		direct page addressing
			(see .setdp directive)
			0 <= dir <= 255 

	,x		register indirect addressing
			zero offset

	offset,x	register indirect addressing
			  0 <= offset <= 255   --- byte mode
			256 <= offset <= 65535 --- word mode
			(an externally defined offset uses the
			 word mode)

	ext		extended addressing

	label		branch label
.end literal

.skip
The terms data, dir, offset, and ext may all be expressions.

Note that not all addressing modes are valid with every instruction,
refer to the 6805 technical data for valid modes.


.test page 14
.header level 2;Control Instructions

.literal
	clc		cli
	nop		rsp
	rti		rts
	sec		sei
	stop		swi
	tax		txa
	wait
.end literal


.test page
.header level 2;Bit Manipulation Instructions

.literal
	brset	#data,*dir,label
	brclr	#data,*dir,label

	bset	#data,*dir
	bclr	#data,*dir
.end literal


.test page 16
.header level 2;Branch Instructions

.literal
	bra	label		brn	label
	bhi	label		bls	label
	bcc	label		bcs	label
	bne	label		beq	label
	bhcc	label		bhcs	label
	bpl	label		bmi	label
	bmc	label		bms	label
	bil	label		bih	label
	bsr	label
.end literal


.test page 39
.header level 2;Read-Modify-Write Instructions

.literal
	nega		negx
	neg	[]

	coma		comx
	com	[]

	lsra		lsrx
	lsr	[]

	rora		rorx
	ror	[]

	asra		asrx
	asr	[]

	lsla		lslx
	lsl	[]

	rola		rolx
	rol	[]

	deca		decx
	dec	[]

	inca		incx
	inc	[]

	tsta		tstx
	tst	[]

	clra		clrx
	clr	[]
.end literal


.test page 14
.header level 2;Register_\Memory Instructions

.literal
	sub	[]		cmp	[]
	sbc	[]		cpx	[]
	and	[]		bit	[]
	lda	[]		sta	[]
	eor	[]		adc	[]
	ora	[]		add	[]
	ldx	[]		stx	[]
.end literal


.test page 8
.header level 2;Jump and Jump to Subroutine Instructions

.literal
	jmp	[]		jsr	[]
.end literal

