.appendix ASF2MC8 Assembler


.header level 1;Processor Specific Directives

  The ASF2MC8 assembler supports the F2MC8L and F2MC8FX
processor cores.

.header level 2;.8L Directive

.break
Format:
.skip;.indent 8
_.8L
.skip
The .8L directive selects the F2MC8L processor cycle
counts to be listed when the -c option is specified.
This is the default selection if no processor directive
is specified in the source assemby file.


.header level 2;.8FX Directive

.break
Format:
.skip;.indent 8
_.8FX
.skip
The .8FX directive selects the F2MC8FX processor cycle
counts to be listed when the -c option is specified.
_.8L is the default selection if no processor directive
is specified in the source assemby file.


.header level 2;The .____.CPU. Variable

The value of the pre-defined symbol '.____.CPU.' corresponds
to the selected processor type.  The default value is 0
which corresponds to the default processor type.  The
following table lists the processor types and associated
values for the ASF2MC8 assembler:

.skip 1
.literal
	Processor Type		  .__.CPU. Value
	--------------		  --------------
	    .8L				 0
	    .8FX			 1
.end literal

.skip 1
  The variable '.____.CPU.' is by default defined as local
and will not be output to the created .rel file.  The
assembler command line options -g or -a will not cause the
local symbol to be output to the created .rel file.

  The assembler .globl directive may be used to change the
variable type to global causing its definition to be
output to the .rel file.  The inclusion of the definition
of the variable '.____.CPU.' might be a useful means of
validating that seperately assembled files have been
compiled for the same processor type.  The linker will
report an error for variables with multiple non equal
definitions.


.header level 1;F2MC8L/F2MC8FX Registers

The following is a list of register designations
recognized by the ASF2MC8 assembler:

.test page 18
.skip
.literal
	pc		-	Program Counter

	a		-	Accumulator

	t		-	Temporary Accumulator

	ix		-	Index Register

	ep		-	Extra Pointer

	sp		-	Stack Pointer

	ps		-	Program Status

	r0,r1,r2,r3,	-	Memory Registers
	r4,r5,r6,r7		32 banks of
				8 registers each
.end literal


.header level 1;F2MC8L/F2MC8FX Instruction Set

The following list specifies the format for
each addressing mode supported by ASF2MC8:

.test page 27
.skip
.literal
	#data		immediate data
			byte or word data

	*dir		direct page addressing

	*dir:b		bit addressing to a
			direct page address

	ext		extended addressing

	a,t		register addressing
	pc,sp,ix,ep

	@a		accumulator indexed

	@ix+d		indexed addressing
			plus offset

	@ix		indexed addressing
			with a zero offset

	@ep		pointer addressing

	r		General-purpose registers

	label		call/jmp/branch label
.end literal

.skip
The terms data, dir, ext, b, d, and label may all be expressions.

Note that not all addressing modes are valid with every instruction,
refer to the F2MC8L/F2MC8FX technical data for valid modes.

The following tables list all F2MC8L/F2MC8FX mnemonics recognized by the
ASF2MC8 assembler. The designation [] refers to a required addressing mode
argument.

.test page 7
.header level 2;Transfer Instructions

.literal
	mov	[],[]		movw	[],[]
	xch	[],[]		xchw	[],[]
	clrb	[]		setb	[]
	swap	[]
.end literal


.test page 14
.header level 2;Operation Instructions

.literal
	addc	a(,[])		addcw	a
	subc	a(,[])		subcw	a
	inc	r		incw	[]
	dec	r		decw	[]
	mulu	a		divu	a
	and	a(,[])		andw	a
	cmp	a(,[])		cmpw	a
	or	a(,[])		orw	a
	xor	a(,[])		xorw	a
	rolc	a		rorc	a
	daa			das
.end literal


.test page 13
.header level 2;Branch/Jump/Call Instructions

.literal
	bz	label		bew	label
	bnz	label		bne	label
	bc	label		blo	label
	bnc	label		bhs	label
	bn	label		bp	label
	blt	label		bge	label
	bbc	*dir:b,label	bbs	*dir:b,label
	jmp	[]		call	label
	callv	#data		xchw	a,pc
	ret			reti
.end literal


.test page 7
.header level 2;Other Instructions

.literal
	pushw	[]		popw	[]
	nop
	clrc			setc
	clri			seti
.end literal
